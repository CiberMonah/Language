-- expand syntax tree to expression tree
[EXPAND {EXPR _1 ...}] =>  [REV {...} [EXPAND _1]]
[EXPAND {TERM _1 ...}] => [REV {...} [EXPAND _1]]
[EXPAND {FACT _1}] => [EXPAND _1]
[EXPAND {FUNC {NAME _1} {ARG _2}}] => {FUNC _1 [EXPAND _2]}
[EXPAND {FACT _1 {POW _2} ...}] => {^ [EXPAND _1] [EXPAND {FACT ...}]}
[EXPAND _1] => _1
-- the root rule: expand, then diff, then fold constants
{EXPR ...} => [CFOLD [D {VAR x} [EXPAND {EXPR ...}]]]
-- {EXPR ...} => [EXPAND {EXPR ...}]
-- {EXPR ...} => [CONSTUP [EXPAND {EXPR ...}]]
[D V_0 {+ _1 _2}] => {+ [D V_0 _1] [D V_0 _2]}
[D V_0 {- _1 _2}] => {- [D V_0 _1] [D V_0 _2]}
[D V_0 {* C_0 _1}] => {* C_0 [D V_0 _1]}
[D V_0 {/ _1 C_0}] => {/ [D V_0 _1] C_0}
[D V_0 {/ _1 _2}] => {/ {- {* [D V_0 _1] _2} {* [D V_0 _2] _1}} {^ _2 {NUM 2}}}
[D V_0 {* _1 _2}] => {+ {* _1 [D V_0 _2]} {* _2 [D V_0 _1]}}
[D V_0 V_0] => {NUM 1}
[D V_0 {^ _1 C_0}] => {* C_0 {* [D V_0 _1] [CFOLD {^ _1 ${- C_0 {NUM 1}}}]}}
[D V_0 {FUNC _1 _2}] => {* [DF _1 _2] [D V_0 _2]}
[DF sin _1] => {cos _1}
[DF cos _1] => {- {sin _1}}
[DF exp _1] => {exp _1}
[DF _1 _2] => {{DF _1} _2}
[D V_0 {^ _1 _2}]  => [D V_0 {{FUNC exp} {* {{FUNC log} _1} _2}}]
[REV {} _1] => _1
[REV {{BINOP _1} _2 ...} _3] => [REV {...} {_1 _3 [EXPAND _2]}]
[D V_0 C_1] => {NUM 0}
[CFOLD {+ _1 _2}] => [CONSTUP {+ [CFOLD _1] [CFOLD _2]}]
[CFOLD {- _1 _2}] => [CONSTUP {- [CFOLD _1] [CFOLD _2]}]
[CFOLD {* _1 _2}] => [CONSTUP {* [CFOLD _1] [CFOLD _2]}]
[CFOLD {/ _1 _2}] => [CONSTUP {/ [CFOLD _1] [CFOLD _2]}]
[CFOLD {^ _1 _2}] => [CONSTUP {^ [CFOLD _1] [CFOLD _2]}]
[CFOLD _1] => [CONSTUP _1]
[CONSTUP {+ C_0 C_1}] => ${+ C_0 C_1}
[CONSTUP {- C_0 C_1}] => ${- C_0 C_1}
[CONSTUP {* C_0 C_1}] => ${* C_0 C_1}
[CONSTUP {+ _1 {NUM 0}}] => [CFOLD _1]
[CONSTUP {- _1 {NUM 0}}] => [CFOLD _1]
[CONSTUP {- {NUM 0} _1}] => {- [CFOLD _1]}
[CONSTUP {* _1 {NUM 1}}] => [CFOLD _1]
[CONSTUP {^ _1 {NUM 0}}] => {NUM 1}
[CONSTUP {^ _1 {NUM 1}}] => [CFOLD _1]
[CONSTUP {^ {NUM 1} _1}] => {NUM 1}
[CONSTUP {^ {NUM 0} _1}] => {NUM 0}
[CONSTUP {+ {NUM 0} _1}] => [CFOLD _1]
[CONSTUP {* {NUM 1} _1}] => [CFOLD _1]
[CONSTUP {* {NUM 0} _1}] => {NUM 0}
[CONSTUP {/ {NUM 0} _1}] => {NUM 0}
[CONSTUP {* _1 {NUM 0}}] => {NUM 0}
[CONSTUP {+ C_0 {+ C_1 _1}}] => {+ ${+ C_0 C_1} [CONSTUP _1]}
[CONSTUP {* C_0 {* C_1 _1}}] => {* ${* C_0 C_1} [CONSTUP _1]}
[CONSTUP {+ _1 C_0}] => {+ C_0 [CFOLD _1]}
[CONSTUP {* _1 C_0}] => {* C_0 [CFOLD _1]}
[CONSTUP {+ _1 _2}] => {+ [CONSTUP _1] [CONSTUP _2]}
[CONSTUP {* _1 _2}] => {* [CONSTUP _1] [CONSTUP _2]}
[CONSTUP _1] => _1

